{
  "$comment": "This file is auto-generated",
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Yume",
  "patterns": [
    {"include": "#comment"                   },
    {"include": "#long_def"                  },
    {"include": "#var_decl"                  },
    {"include": "#keywords"                  },
    {"include": "#string"                    },
    {"include": "#character"                 },
    {"include": "#integer"                   },
    {"include": "#var_assign"                },
    {"include": "#index"                     },
    {"include": "#self_field_access"         },
    {"include": "#implicit_self_field_access"},
    {"include": "#field_access"              },
    {"include": "#direct_call"               },
    {"include": "#constant"                  },
    {"include": "#member_constant"           },
    {"include": "#type"                      },
    {"include": "#separator"                 }
  ],
  "repository": {
    "character": {"match": "\\?(\\\\)?.", "name": "string.character.yume"},
    "comment": {
      "captures": { "1": {"name": "punctuation.definition.comment.yume"} },
      "match": "(?:^[ \\t]+)?(#).*$\\n?",
      "name": "comment.line.number-sign.yume"
    },
    "constant": {
      "match": "\\$\\p{Lu}\\w*"              ,
      "name" : "variable.other.constant.yume"
    },
    "direct_call": {
      "captures": {
        "1": {"name": "variable.yume"         },
        "2": {"name": "punctuation.arrow.yume"}
      },
      "match": "\\b(\\p{Ll}\\w*)(\\-\\>)(?=\\()",
      "name": "meta.call.direct.yume"
    },
    "field_access": {
      "captures": {
        "1": {"name": "variable.yume"                    },
        "2": {"name": "punctuation.separator.method.yume"},
        "3": {"name": "variable.yume"                    }
      },
      "match": "\\b(\\p{Ll}\\w*)(\\:\\:)(\\p{Ll}\\w*)\\b",
      "name": "meta.field.yume"
    },
    "implicit_self_field_access": {
      "match": "\\B\\:\\:\\p{Ll}\\w*"     ,
      "name" : "variable.access.self.yume"
    },
    "index": {
      "begin": "\\b(\\p{Ll}\\w*)\\s*(\\[)\\s*",
      "beginCaptures": {
        "1": {"name": "variable.yume"        },
        "2": {"name": "punctuation.lsqr.yume"}
      },
      "end": "\\]",
      "endCaptures": { "0": {"name": "punctuation.rsqr.yume"} },
      "name": "meta.variable.index.yume",
      "patterns": [ {"include": "$self"} ]
    },
    "integer": {
      "patterns": [
        {
          "match": "-?[0-9][0-9_]*\\b"            ,
          "name" : "constant.numeric.integer.yume"
        },
        {
          "match": "\\b0x[a-fA-F0-9_]+\\b"            ,
          "name" : "constant.numeric.integer.hex.yume"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "\\b(?:def|let|self|if|then|else|do|end|while|return|struct|__primitive__|__varargs__|__extern__)\\b",
          "name": "keyword.control.yume"
        },
        {
          "match": "\\b(?:true|false)\\b"          ,
          "name" : "constant.language.boolean.yume"
        }
      ]
    },
    "long_def": {
      "begin": "\\b(def)\\s+((?:@\\w+\\s+)*)((?:(?:\\+|\\-|\\[\\]|\\*|%|&|\\/\\/|\\>|\\<|:?\\w+)(?:\\=)?|(?:\\=\\=|\\!\\=|\\!)))\\s*((?:\\{(?:\\w|\\s|,)*\\})?)\\s*(\\()",
      "beginCaptures": {
        "1": {"name": "keyword.control.def.yume"              },
        "2": {"name": "keyword.control.attribute.yume"        },
        "3": {"name": "entity.name.function.yume"             },
        "4": {"name": "support.class.other.type-param.yume"   },
        "5": {"name": "punctuation.definition.parameters.yume"}
      },
      "end": "\\)",
      "endCaptures": {
        "0": {"name": "punctuation.definition.parameters.yume"}
      },
      "name": "meta.function.method.long.yume",
      "patterns": [
        {
          "begin": "(?![\\s,)])",
          "end": "(?=(?:,|\\)\\s*))",
          "patterns": [
            {"include": "#self_kwd"  },
            {"include": "#plain_name"},
            {"include": "$self"      }
          ]
        }
      ]
    },
    "member_constant": {
      "captures": {
        "1": {"name": "entity.name.type.yume"              },
        "2": {"name": "punctuation.separator.method.yume"  },
        "3": {"name": "variable.other.constant.member.yume"}
      },
      "match": "\\b(\\p{Lu}\\w*)(\\:\\:)(\\p{Lu}\\w*)",
      "name": "meta.constant.member.yume"
    },
    "plain_name": {"match": "\\b\\p{Ll}\\w*", "name": "variable.yume"},
    "self_field_access": {
      "captures": { "1": {"name": "variable.yume"} },
      "match": "(?<=\\bself)\\:\\:(\\p{Ll}\\w*)",
      "name": "meta.field.self.yume"
    },
    "self_kwd": {
      "match": "\\bself(?:\\s*(?:\\[\\]|ptr|mut|type|ref))*",
      "name" : "keyword.control.self.yume"
    },
    "separator": {
      "match": "(?:\\.|\\:\\:)"                   ,
      "name" : "punctuation.separator.method.yume"
    },
    "string": {
      "begin": "\"",
      "end": "\"",
      "name": "string.quoted.double.yume",
      "patterns": [
        {"match": "\\\\.", "name": "constant.character.escape.yume"}
      ]
    },
    "type": {
      "match": "(?:\\b\\p{Lu}\\w*(?:\\{\\s*(?:\\g<0>(?:\\s*,\\s*\\g<0>)*\\s*)?\\})?|\\(\\s*(?:\\g<0>(?:\\s*,\\s*\\g<0>)*\\s*)?\\-\\>(?:ptr)?\\s*(?:\\g<0>)?\\s*\\))(?:\\s*(?:\\[\\]|ptr|mut|type|ref))*",
      "name": "entity.name.type.yume"
    },
    "var_assign": {
      "captures": {
        "1": {"name": "variable.yume"          },
        "2": {"name": "punctuation.equals.yume"}
      },
      "match": "\\b(\\p{Ll}\\w*)\\s*(\\=)\\s*\\b",
      "name": "meta.variable.assignment.yume"
    },
    "var_decl": {
      "begin": "\\b(?:(let)|(const))\\s+(\\w+)\\s*",
      "beginCaptures": {
        "1": {"name": "keyword.control.let.yume"  },
        "2": {"name": "keyword.control.const.yume"},
        "3": {"name": "variable.declaration.yume" }
      },
      "end": "\\=",
      "endCaptures": { "0": {"name": "punctuation.equals.yume"} },
      "name": "meta.variable.declaration.yume",
      "patterns": [ {"include": "$self"} ]
    }
  },
  "scopeName": "source.yume"
}
